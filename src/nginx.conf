worker_processes 1;
daemon off;

error_log <%= ENV["APP_ROOT"] %>/nginx/logs/error.log;
events { worker_connections 1024; }

http {
  log_format cloudfoundry '$http_x_forwarded_for - $http_referer - [$time_local]
 "$request" $status $body_bytes_sent';
  access_log <%= ENV["APP_ROOT"] %>/nginx/logs/access.log cloudfoundry;
  default_type application/octet-stream;
  include mime.types;
  types {
    application/json json;
    # application/x-font-ttf ttf;
    # application/x-font-opentype otf;
    # application/font-woff woff;
    # application/vnd.ms-fontobject eot;
    image/svg+xml svg;

    application/font-woff                 woff;
    application/font-woff2                woff2;
    application/vnd.ms-fontobject         eot;
    application/x-font-ttf                ttc ttf;
    font/opentype                         otf;
  }
  sendfile on;
  gzip on;
  tcp_nopush on;
  keepalive_timeout 30;


  server {
    ssl off;
    listen <%= ENV["PORT"] %>;
    server_name localhost;

    location ~ /\.ht { deny  all; }
    location / {
      #sytax for adding custom header
      #add_header 'hugh custom header' 'this is my custom header2';

      #ensure user is going through https
      if ($http_x_forwarded_proto != "https") {
        return 301 "https://${host}";
      }
      root <%= ENV["APP_ROOT"] %>/public;
      index index.html index.htm Default.htm;
      try_files $uri$args $uri$args/ $uri/ /index.html =404;
    }

    # trying to redirect old urls to new urls, but this does not work even with /#/governance_standards
    #location /governance_standards {
    #  return 301 $scheme://${host}/#/content/what-are-enterprise-standards;
    #}
    #uncomment lines below to setup reverse proxy
    #location /sap/ {
    #      proxy_pass <%= ENV["GW_HOST"] %>;
    #      #prevent user from being prompted for basic authentication
    #      proxy_hide_header www-authenticate;
    #}
  }
}
